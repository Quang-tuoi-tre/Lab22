
@* @model IEnumerable<Lab22.Models.Product> *@

 @model PaginatedList<Lab22.Models.Product>

@{
    ViewData["Title"] = "Index";
}
<style>
/* Style the dropdown menu */
.dropdown-content {
display: none;
position: absolute;
background-color: #fff;
border: 1px solid #ccc;
border-radius: 5px;
box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
z-index: 1000; /* Ensure dropdown is above other elements */
max-height: 200px; /* Adjust max-height as needed */
overflow-y: auto; /* Enable scrolling if needed */
width: 100%; /* Set width to match search input */
box-sizing: border-box; /* Ensure width includes padding and

border */
}
/* Style each suggestion item */
.suggestion {
padding: 10px;
cursor: pointer;
}
/* Change color of suggestion item on hover */
.suggestion:hover {

background-color: #f4f4f4;
}
</style>


<h1>Index</h1>

<p>
    <a asp-action="Add">Create New</a>
</p>

@* @using (Html.BeginForm("SearchProducts", "Products", FormMethod.Get))
{
    <input type="text" name="query" placeholder="Tìm Sản phẩm" />
    <input type="submit" value="Search" />
}
<form action="/Products/SearchProducts" method="get">
    <input type="text" name="query" placeholder="Tìm Sản phẩm" />
    <input type="submit" value="Search" />
</form> *@
<form id="search-form" action="/Product/SearchProducts" method="get" class="dropdown">
    <input id="search-input" type="text" name="query" placeholder="Tìm
Sản phẩm" />
    <div id="search-results" class="dropdown-content">
        
    </div>
    <input type="submit" value="Search" />
</form>



<table class="table" id="products">
    <thead>
        <tr>
            <th>
              Name
            </th>
            <th>
                Price
            </th>
            <th>
         Description
            </th>
            <th>
               ImageUrl
            </th>
            <th>
                Category
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Price)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                    @if (item.ImageUrl != null)
                    {
                        <img src="@item.ImageUrl" width="150px"/>
                    }
                    else{

                        <h5>Không có hình ảnh</h5>
                        }
                    </td>
            <td>
                @Html.DisplayFor(modelItem => item.Category.Name)
            </td>
            <td>
                    @if (User.IsInRole("Admin"))
                    {
                <a asp-action="Edit" asp-route-id="@item.Id">Edit</a>
                    }
                <a asp-action="Details" asp-route-id="@item.Id">Details</a> 
                    @if (User.IsInRole("Admin"))
                    {
                <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                    }
                    <a asp-controller="ShoppingCart" asp-action="AddToCart" asp-route-id="@item.Id">Đặt hàng</a>

            </td>
        </tr>
}
    </tbody>

    
</table>

 <div>
    <nav aria-label="Page navigation">
        <ul class="pagination">
            @for (int i = 1; i <= @Model.TotalPages; i++)
            {
                <li class="page-item @(i == @Model.PageIndex ?"active" : "")">

                    <a class="page-link"
                       href="@Url.Action("Index", new { pageNumber = i })">@i</a>

                </li>
            }
        </ul>
    </nav 
</div> 

@* @{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}
<a asp-action="Index"
   asp-route-pageNumber="@(Model.PageIndex - 1)" class="btn btn-default
@prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   class="btn btn-default @nextDisabled">
    Next
</a>  *@
@section Scripts{
  <script>
    $(document).ready(function () {
        $("#search-input").keyup(function () {
            var query = $(this).val();
            if (query !== '') {
                $.ajax({
                    url: "/product/SearchSuggestions",
                    type: "GET",
                    data: { query: query },
                    dataType: "json",
                    success: function (data) {
                        $("#search-results").empty(); 
                        $.each(data, function (index, suggestion) {
                            $("#search-results").append("<div class='suggestion'>" + suggestion + "</div>");
                        });
                        $(".dropdown-content").css("display", "block");
                    },
                    error: function (xhr, status, error) {
                        console.log("Error:", error);
                    }
                });
            } else {
                $("#search-results").empty(); 
                $(".dropdown-content").css("display", "none"); 
            }
        });

        $("#search-form").submit(function (event) {
            event.preventDefault();
            var query = ${ "#search-input"}.val();
            $.ajax({
                url: "/Product/SearchProducts",
                type: "GET",
                data: { query: query },
                success: function (data) {
                    $("#products").html(data);
                },
                error: function (xhr, status, error) {
                    console.error("Error:", error);
                }
            });
        });
        
        // $(document).on("click", ".suggestion", function () {
        //     var selectedSuggestion = $(this).text();
        //     $("#search-input").val(selectedSuggestion); 

        //     $("#search-results").empty(); 
        //     $(".dropdown-content").css("display", "none"); 
        // });

        // $(document).click(function (event) {
        //     if (!$(event.target).closest('.dropdown').length) {
        //         $(".dropdown-content").css("display", "none");
        //     }
        // });
    });
</script>
} 

@*  @section Scripts {
    <script>
        $(document).ready(function () {
            $("#search-input").keyup(function () {
                var query = $(this).val();
                if (query !== '') {
                    $.ajax({
                        url: "/product/SearchSuggestions",
                        type: "GET",
                        data: { query: query },
                        dataType: "json",
                        success: function (data) {
                            $("#search-results").empty(); // Clear previous suggestions
                            $.each(data, function (index, suggestion) {
                                $("#search-results").append("<div class='suggestion'>" + suggestion + "</div>"); // Append new suggestions
                            });
                            $(".dropdown-content").css("display", "block"); // Show dropdown
                        },
                        error: function (xhr, status, error) {
                            console.log("Error:", error);
                        }
                    });
                } else {
                    $("#search-results").empty(); // Clear suggestions if query is empty
                    $(".dropdown-content").css("display", "none"); // Hide dropdown if input is empty
                }
            });
            //-----------------------------------------
            $("#search-form").submit(function (event) {
                // Prevent default form submission behavior
                event.preventDefault();
                // Get the search query from the input field
                var query = $("#search-input").val();
                // Call the SearchProducts action via AJAX
                $.ajax({
                    url: "/Product/SearchProducts",
                    type: "GET",
                    data: { query: query },
                    success: function (data) {
                    // Handle the response, for example, update a div with the search results

                        $("#products").html(data);
                    },
                    error: function (xhr, status, error) {
                        console.error("Error:", error);
                    }
                });
            });
            //---------------------------------------------
            // Handle click on suggestion
            $(document).on("click", ".suggestion", function () {
                var selectedSuggestion = $(this).text();
                $("#search-input").val(selectedSuggestion); // Set search input value to Selected suggestion

                $("#search-results").empty(); // Clear suggestions
                $(".dropdown-content").css("display", "none"); // Hide dropdown
            });
            // Close dropdown if user clicks outside of it
            $(document).click(function (event) {
                if (!$(event.target).closest('.dropdown').length) {
                    $(".dropdown-content").css("display", "none");
                }
            });
        });
    </script>
} *@